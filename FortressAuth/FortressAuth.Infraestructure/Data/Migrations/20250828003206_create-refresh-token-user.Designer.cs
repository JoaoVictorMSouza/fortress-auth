// <auto-generated />
using System;
using FortressAuth.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FortressAuth.Infraestructure.Data.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    [Migration("20250828003206_create-refresh-token-user")]
    partial class createrefreshtokenuser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FortressAuth.Domain.Entities.RefreshTokenUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DhChange")
                        .HasColumnType("datetime2")
                        .HasColumnName("DH_CHANGE");

                    b.Property<DateTime?>("DhInclusion")
                        .HasColumnType("datetime2")
                        .HasColumnName("DH_INCLUSION");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("DH_EXPIRES_AT_UTC");

                    b.Property<bool>("IsInactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("TG_INACTIVE")
                        .HasDefaultValueSql("1");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Revoked")
                        .HasColumnType("int")
                        .HasColumnName("TG_REVOKED");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DS_TOKEN");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("TB_REFRESH_TOKEN_USER", (string)null);
                });

            modelBuilder.Entity("FortressAuth.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DhChange")
                        .HasColumnType("datetime2")
                        .HasColumnName("DH_CHANGE");

                    b.Property<DateTime?>("DhInclusion")
                        .HasColumnType("datetime2")
                        .HasColumnName("DH_INCLUSION");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_EMAIL");

                    b.Property<bool>("IsInactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("TG_INACTIVE")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_NAME");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_PASSWORD_HASH");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DS_ROLE");

                    b.HasKey("Id");

                    b.ToTable("TB_USER", (string)null);
                });

            modelBuilder.Entity("FortressAuth.Domain.Entities.RefreshTokenUser", b =>
                {
                    b.HasOne("FortressAuth.Domain.Entity.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FortressAuth.Domain.Entity.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
